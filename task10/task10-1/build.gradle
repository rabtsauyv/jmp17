/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'war'
apply plugin: 'jetty'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenLocal()
    mavenCentral()
}

configurations {
	itestCompile.extendsFrom testCompile
	itestRuntime.extendsFrom testRuntime
}

dependencies {
	compile group: 'javax.xml.ws', name: 'jaxws-api', version: '2.2.6'
	compile group: 'com.sun.xml.ws', name: 'jaxws-rt', version: '2.1.3'
	
	testCompile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'
	testCompile group: 'junit', name: 'junit', version: '4.12'
}

def Integer portNumber, stopPortNumber

task configureTestServer {
	def int count = 13400
	def boolean found = false
	
	def ServerSocket socket
	while(!found && count < 14000) {
		try {
			socket = new ServerSocket(count)
			found = true
			break
		} catch (Exception e) {
		} finally {
			if (socket != null) {
				socket.close()
			}
		}
		count += 10
	}
	if (!found) {
		throw new StopExecutionException("couldn't find free port")
	}
	
	portNumber = count
	stopPortNumber = portNumber + 1
	jettyRunWar.httpPort = portNumber
	jettyRunWar.daemon = true
	[jettyRunWar,jettyStop]*.stopPort = stopPortNumber
	[jettyRunWar,jettyStop]*.stopKey = 'stopKey'
}

sourceSets {
	itest {
    	compileClasspath += main.output + test.output
    	runtimeClasspath += main.output + test.output
    	java.srcDir file('src/int-test/java')
    }
}

task itests (type : Test) {
	testClassesDir = sourceSets.itest.output.classesDir
	classpath = sourceSets.itest.runtimeClasspath
	
	systemProperty 'testServerPortNumber', portNumber
	dependsOn configureTestServer, jettyRunWar
	finalizedBy jettyStop
}

